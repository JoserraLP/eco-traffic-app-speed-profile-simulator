from eco_traffic_app_speed_profile_simulator.path.path_model import PathModel
from eco_traffic_app_speed_profile_simulator.utils.plots import show_plots
from eco_traffic_app_speed_profile_simulator.vehicle.movement import VehicleMovement
from eco_traffic_app_speed_profile_simulator.vehicle.power_energy import PowerEnergyEstimator
from eco_traffic_app_speed_profile_simulator.vehicle.veh_model import VehModel

if __name__ == "__main__":
    # Initialize vehicle
    vehicle = VehModel(unladen_veh_mass=1000, load_veh_mass=300, gamma=1.05, resistance_advance=0.015,
                       frontal_area_m=2, p_max_kw=100, kwh_per_diesel_l=10)

    # Define PK inicio
    # segment_start_point = [0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000]

    segment_start_point = [0, 127.467, 180.666, 210.155, 277.484, 335.355, 385.251, 418.889, 451.944, 546.883, 565.302,
                           608.156, 650.325, 671.923, 700.137, 911.484, 969.517, 1023.979, 1195.154, 1258.969, 1493.249,
                           1545.19, 1639.779, 1660.423, 1692.078, 1733.973, 1777.712, 1807.215, 1859.316, 1932.884,
                           1976.292, 2045.448, 2075.643, 2126.936, 2170.978, 2235.555, 2256.985, 2301.196, 2317.233,
                           2370.216, 2424.61, 2486.11, 2571.955, 2609.579, 2637.789, 2682.104, 2702.238, 2747.368,
                           2785.704, 2801.271, 2829.93, 2866.397, 2882.906, 2912.449, 2969.646, 3000.088, 3048.231,
                           3073.721, 3112.699, 3143.962, 3166.457, 3173.294, 3193.212, 3227.409, 3252.349, 3297.097,
                           3349.735, 3487.385, 3537.84, 3570.729, 3621.916, 3635.727, 3682.136, 3751.879, 3780.272,
                           3784.487, 3804.28, 3851.058, 3930.629, 3959.784, 3974.473, 4006.034, 4024.854, 4047.718,
                           4085.93, 4119.758, 4146.509, 4167.222, 4191.544, 4349.483, 4432.747, 4449.532, 4498.898,
                           4629.658, 4656.788, 4740.748, 4784.98, 4841.944, 4880.016, 4918.913, 4951.792, 4995.102,
                           5023.51, 5095.255, 5122.771, 5208.882, 5271.667]

    # Define velocidad limite por km/h
    # speed_limit_km_h = [50, 50, 50, 70, 70, 30, 30, 30, 50, 50, 30]

    speed_limit_km_h = [50, 51.96152423, 42.42640687, 60, 35.4964787, 30, 50, 26.83281573, 50, 30, 50, 21.21320344, 50,
                        23.23790008, 120, 60, 32.86335345, 50, 51.96152423, 50, 60, 50, 26.83281573, 21.21320344,
                        32.86335345, 50, 37.94733192, 37.94733192, 73.48469228, 35.4964787, 50, 21.21320344, 30,
                        25.0998008, 50, 30, 50, 18.97366596, 50, 30, 51.96152423, 51.96152423, 26.83281573, 18.97366596,
                        35.4964787, 37.94733192, 18.97366596, 50, 23.23790008, 50, 21.21320344, 50, 18.97366596,
                        51.96152423, 23.23790008, 51.96152423, 21.21320344, 50, 26.83281573, 50, 13.41640786, 50,
                        32.86335345, 26.83281573, 50, 35.4964787, 79.37253933, 46.47580015, 50, 32.86335345, 50,
                        25.0998008, 50, 26.83281573, 18.97366596, 50, 26.83281573, 35.4964787, 37.94733192, 50,
                        42.42640687, 50, 18.97366596, 50, 18.97366596, 32.86335345, 50, 18.97366596, 50, 30, 50,
                        25.0998008, 46.47580015, 30, 60, 30, 50, 32.86335345, 32.86335345, 42.42640687, 51.96152423,
                        42.42640687, 50, 14.69693846, 84.85281374, 103.9230485, 84.85281374, 16.43167673, 50,
                        42.42640687, 14.69693846, 50, 60, 60, 50, 25.0998008, 50, 42.42640687, 50, 25.0998008,
                        50, 32.86335345, 50, 26.83281573, 32.86335345, 42.42640687, 50, 18, 50, 51.96152423,
                        67.08203932, 23.23790008, 42.42640687, 25.0998008, 51.96152423, 37.94733192, 50, 37.94733192,
                        50, 23.23790008, 50, 16.43167673, 46.47580015, 73.48469228, 30, 50, 46.47580015, 51.96152423,
                        37.94733192, 50, 26.83281573, 30, 50, 21.21320344, 42.42640687, 50, 15.87450787, 42.42640687,
                        60, 30, 50, 26.83281573, 50, 28.46049894, 50, 37.94733192, 50, 60, 60, 60, 73.48469228, 50,
                        26.83281573, 30, 50, 42.42640687, 50, 25.0998008, 50, 50]

    # Define slope
    # slope = [0, 2, 2, 2, 0, 0, 4, 4, 0, 0, 0]

    slope = [1.976319949, 6.723120265, 6.723278172, 6.722783644, 6.723272019, 6.722995831, 6.722192312, 6.457861141,
             4.450571578, 2.572137195, 1.555507204, 0.706804271, 0.685, 0.685, 0.685, 0.685, 0.685, 0.818247378,
             2.933258325, 6.218465447, 6.673074739, 6.673942795, 6.67, 5, 6.673092245, 6.674054541, 6.672975262,
             6.674612243, 6.675, 6.673640713, 6.672696277, 6.673553994, 6.675, 6.673050416, 6.675, 6.673451461, 6.675,
             6.672738119, 6.675, 6.674035917, 6.674100636, 6.673373984, 6.67383511, 6.673727009, 6.67315296,
             6.674762609, 6.670555776, 6.675, 6.672391486, 6.674899757, 6.746157768, 7.032597965, 7.28520504,
             7.536384084, 7.955000396, 8.239452971, 8.237931994, 8.24, 8.24, 8.24, 8.238564792, 8.235, 8.238316598,
             8.24, 8.24, 8.24, 8.239075288, 8.239627134, 8.238232088, 8.239671623, 8.24, 8.24, 8.24, 8.238566164, 8.24,
             8.24, 8.24, 8.24, 8.238743261, 8.24, 8.24, 8.24, 8.24, 8.238260073, 6.937517316, 3.817757371, 2.890021444,
             2.89174335, 2.89262684, 2.891899468, 2.891966456, 2.89216056, 2.91649852, 7.482917055, 8.506906008,
             8.507382087, 8.507260807, 8.506755495, 8.507626602, 8.505, 8.508041455, 8.506743477, 8.506479865,
             7.0333295, 3.203654238, 5.030070536, 8.441458964, 7.766487668]

    # Initialize path route
    route = PathModel(segment_start_point, speed_limit_km_h, slope)

    # Initialize vehicle movement object
    veh_movement = VehicleMovement(vehicle=vehicle, route=route)

    # Perform the route with the vehicle
    veh_movement.perform_route()

    # Initialize power and energy estimator
    power_energy_estimator = PowerEnergyEstimator(vehicle_movement=veh_movement)

    # Estimate power consumption
    power_energy_estimator.estimate_power_consumption()

    # Show some plots
    show_plots(veh_movement.time, veh_movement.space, "time", "space", "space")
    show_plots(veh_movement.time, [i * 3.6 for i in veh_movement.speed], "time", "speed (km/h)", "speed")
    show_plots(veh_movement.time, veh_movement.acceleration, "time", "acceleration", "acceleration")
    show_plots(veh_movement.time, veh_movement.state, "time", "state", "state")
